# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# in the schema we will be doing Query and Mutations
schema {
  query: Query
  mutation: Mutation
}

# These are the two queries we will be doing
type Query {
  characters: [Character!]!
  search(name: String!): Character
  getBrokerItems(page: GetBrokerItemsInput): BrokerPageResponse
  getWorkerItems(page: GetWorkerItemsInput): WorkerPageResponse
  getTaskItems(page: GetTaskItemsInput): TaskPageResponse
  getTaskResultItems(page: GetTaskResultItemsInput): TaskResultPageResponse
 }

# This is a mutation we will be doing
type Mutation {
  add(character: CharacterInput!): Character!
  receive_task(task: TaskInput): TaskResponse!
  stopTask(task: StopTaskInput): StopTaskResponse!
}

# just a input type for our mutation
input CharacterInput {
  name: String!
  likes: Int!
}

# character schema
type Character {
  id: ID!
  name: String!
  likes: Int!
}

# receive a task
input TaskInput {
  instanceId: String!
  brokerId: String!
  workerId: String!
  type: Int!
  cron: String!
  dna: String!
  mutation: String!
}
type TaskResponse {
  status: Int!
  msg: String!
}

# Get broker items
input GetBrokerItemsInput {
  index: Int!
  size: Int!
 }
type BrokerPageResponse {
  totalItems: Int!
  totalPages: Int!
  currentPage: Int!
  items: [BrokerScalar]
}

# Get worker items
input GetWorkerItemsInput {
  index: Int!
  size: Int!
}
type WorkerPageResponse {
  totalItems: Int!
  totalPages: Int!
  currentPage: Int!
  items: [WorkerScalar]
}

# Get Task
input GetTaskItemsInput {
  index: Int!
  size: Int!
}
type TaskPageResponse {
  totalItems: Int!
  totalPages: Int!
  currentPage: Int!
  items: [TaskScalar]
}

# Get Task Result
input GetTaskResultItemsInput {
  index: Int!
  size: Int!
}
type TaskResultPageResponse {
  totalItems: Int!
  totalPages: Int!
  currentPage: Int!
  items: [TaskResultScalar]
}

# Stop Task
input StopTaskInput {
  instanceId: String!
  brokerId: String!
  workerId: String!
}
type StopTaskResponse {
  status: Int32!
  msg: String!
}

scalar Int32
scalar BrokerScalar
scalar WorkerScalar
scalar TaskScalar
scalar TaskResultScalar
